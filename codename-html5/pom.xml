<?xml version="1.0"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.codename</groupId>
        <artifactId>codename-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>  
    </parent>
    
    <artifactId>codename-html5</artifactId>
    <packaging>war</packaging>
    
    <name>CodeName HTML5</name>

    
    
   
    <dependencies>
        <dependency>  
            <groupId>javax</groupId>    
             <artifactId>javaee-web-api</artifactId>    
             <version>7.0</version>  
             <scope>provided</scope>
         </dependency> 
        
        <dependency>
            <groupId>org.codename</groupId>
            <artifactId>codename-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
       
    </dependencies>
    <properties>
                <server.address>'http://localhost:8080/'</server.address>
                <server.context>'codename-server/'</server.context>
            </properties>
    <build>
          
        <finalName>${project.artifactId}</finalName>
         
    
        <plugins>
              
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.2.Final</version>
                <!--configuration>
                    <jvmArgs>-Xms2048m -Xmx4024m -XX:MaxPermSize=2024M -XX:PermSize=1512M -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=y</jvmArgs>
                </configuration-->
            </plugin>
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                  <webResources>
                    <resource>
                      <!-- this is relative to the pom.xml directory -->
                      <directory>app</directory>
                      <filtering>true</filtering>
                                    
                                    <includes>
                                        <include>**/*.js</include>
                                        <!-- include any other file types you want to filter -->
                                    </includes>
                    </resource>
                  </webResources>
                </configuration>
            </plugin>
            <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.11.3</version>
        <configuration>
          <!-- Global configuration. -->
          <dockerHost>http://192.168.59.103:2376</dockerHost>
          
          <!-- Although no authentication on registry, set empty values. If not, plugin push goal fails. -->
          <authConfig>
            <username></username>
            <password></password>
          </authConfig>
          <useColor>true</useColor>
          <logDate>default</logDate>
          <verbose>true</verbose>

          
          <images>

           
            <image>
              <name>codename/codename:${project.version}</name>
              <alias>codename</alias>
              <build>
                <assembly>
                  <dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>
                  <descriptor>${project.basedir}/src/main/assembly/docker-assembly.xml</descriptor>
                </assembly>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <env>
                  
                </env>
                <ports>
                  <port>codename.wf8.http.port:8080</port>
                </ports>
               
                <log>
                  <prefix>DEMO</prefix>
                  <date>ISO8601</date>
                  <color>blue</color>
                </log>
              </run>
            </image>

           
          </images>
        </configuration>

        <!--executions>

          <execution>
            <id>ui-build</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>

          <execution>
            <id>ui-start</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>

                </executions-->

            </plugin> 
            
        </plugins>
       
    </build>
 


   

    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <properties>
                <server.address>'http://fhellow-restprovider.rhcloud.com/'</server.address>
                <server.context>'codename-server/'</server.context>
            </properties>
            
            <build>
                <resources>
                    <resource>
                        <directory>app/</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.js</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>app/</directory>
                        <filtering>false</filtering>
                        <excludes>
                            <exclude>**/*.js</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.1.1</version>
                        <configuration>
                            <webResources>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>app</directory>
                                    <includes>
                                        <include>**/*.js</include>
                                        <!-- include any other file types you want to filter -->
                                    </includes>
                                </resource>
                            </webResources>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>fhellow</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
    <pluginRepositories>
        <pluginRepository>
            <id>codehaus-snapshots</id>
            <name>Codehaus Snapshots</name>
            <url>http://nexus.codehaus.org/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    
 
    
</project>

